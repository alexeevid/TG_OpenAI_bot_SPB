name: Open PR (manual)

on:
  workflow_dispatch:
    inputs:
      change_type:
        description: 'Type of change: single or zip'
        required: true
        default: 'single'
      file_path:
        description: 'Path to file (for change_type=single)'
        required: false
        default: 'README.md'
      file_content:
        description: 'New file content (paste here, multiline OK)'
        required: false
      zip_url:
        description: 'Public URL to a ZIP (unpacked into repo root) for change_type=zip'
        required: false
      pr_title:
        description: 'PR title'
        required: false
        default: 'Automated update'
      pr_body:
        description: 'PR body'
        required: false
        default: 'Proposed changes from assistant workflow'
      commit_message:
        description: 'Commit message'
        required: false
        default: 'chore: automated update'

permissions:
  contents: write
  pull-requests: write

jobs:
  open-pr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Apply changes (single file)
        if: ${{ github.event.inputs.change_type == 'single' }}
        shell: bash
        run: |
          set -euo pipefail
          path="${{ github.event.inputs.file_path }}"
          mkdir -p "$(dirname "$path")"
          cat > "$path" <<'EOF_CONTENT'
${{ github.event.inputs.file_content }}
EOF_CONTENT
          echo "Wrote $path"

      - name: Apply changes from ZIP
        if: ${{ github.event.inputs.change_type == 'zip' }}
        shell: bash
        run: |
          set -euo pipefail
          url="${{ github.event.inputs.zip_url }}"
          if [ -z "$url" ]; then
            echo "::error::zip_url is empty"; exit 1
          fi
          echo "Downloading $url"
          curl -fsSL "$url" -o /tmp/patch.zip
          unzip -o /tmp/patch.zip -d .
          echo "Unzipped:" && ls -la

      - name: Detect changes
        id: diff
        shell: bash
        run: |
          set -euo pipefail
          if [ -z "$(git status --porcelain)" ]; then
            echo "changed=0" >> "$GITHUB_OUTPUT"
          else
            echo "changed=1" >> "$GITHUB_OUTPUT"
          fi

      - name: Create Pull Request
        if: ${{ steps.diff.outputs.changed == '1' }}
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ github.token }}   # встроенного токена достаточно
          commit-message: ${{ github.event.inputs.commit_message }}
          title: ${{ github.event.inputs.pr_title }}
          body: ${{ github.event.inputs.pr_body }}
          branch: bot-pr/${{ github.run_id }}-${{ github.run_number }}
          delete-branch: true
          author: assistant-bot <assistant-bot@users.noreply.github.com>
          committer: assistant-bot <assistant-bot@users.noreply.github.com>

      - name: No changes summary
        if: ${{ steps.diff.outputs.changed == '0' }}
        run: echo "No changes detected. Nothing to commit." >> "$GITHUB_STEP_SUMMARY"
