name: Railway Logs (manual)

on:
  workflow_dispatch:
    inputs:
      lines:
        description: 'Number of lines'
        required: false
        default: '400'

jobs:
  logs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Railway CLI + jq
        run: |
          npm i -g @railway/cli
          railway --version
          sudo apt-get update -y
          sudo apt-get install -y jq

      - name: Login to Railway
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          if [ -z "${RAILWAY_TOKEN:-}" ]; then
            echo "::error::RAILWAY_TOKEN secret is missing"; exit 1
          fi
          railway login --token "$RAILWAY_TOKEN"

      - name: Fetch logs
        env:
          RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }}
          RAILWAY_SERVICE_ID: ${{ secrets.RAILWAY_SERVICE_ID }}
          RAILWAY_ENV_ID:     ${{ secrets.RAILWAY_ENV_ID }} # optional
        run: |
          LINES="${{ github.event.inputs.lines }}"
          ARGS="--json --lines ${LINES}"

          # Если знаем ID — используем их (рекомендую задать хотя бы PROJECT и SERVICE)
          if [ -n "${RAILWAY_PROJECT_ID:-}" ]; then ARGS="$ARGS --project $RAILWAY_PROJECT_ID"; fi
          if [ -n "${RAILWAY_SERVICE_ID:-}" ]; then ARGS="$ARGS --service $RAILWAY_SERVICE_ID"; fi
          if [ -n "${RAILWAY_ENV_ID:-}"     ]; then ARGS="$ARGS --environment $RAILWAY_ENV_ID"; fi

          # Если ID не заданы — пробуем автоопределить из связанного проекта
          if [ -z "${RAILWAY_PROJECT_ID:-}" ] || [ -z "${RAILWAY_SERVICE_ID:-}" ]; then
            railway status --json > status.json || true
            PID="$(jq -r '.project.id // empty' status.json)"
            SID="$(jq -r '.services[0].id // empty' status.json)"
            if [ -n "$PID" ]; then ARGS="$ARGS --project $PID"; fi
            if [ -n "$SID" ]; then ARGS="$ARGS --service $SID"; fi
          fi

          echo "railway logs $ARGS"
          railway logs $ARGS > railway_logs.json

          jq -r '.logs[]?.message // empty' railway_logs.json | tail -n "${LINES}" > railway_logs.txt || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: railway-logs
          path: |
            railway_logs.json
            railway_logs.txt

      - name: Summary
        run: |
          echo "### Railway logs (last ${{ github.event.inputs.lines }} lines)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          tail -n "${{ github.event.inputs.lines }}" railway_logs.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
