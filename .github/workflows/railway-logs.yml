name: Railway Logs (manual)

on:
  workflow_dispatch:
    inputs:
      lines:
        description: "Сколько строк показать (tail)"
        required: false
        default: "400"
      service_id:
        description: "Override SERVICE_ID (опционально)"
        required: false
        default: ""
      environment_id:
        description: "Override ENV_ID (опционально)"
        required: false
        default: ""
      deployment_id:
        description: "DEPLOYMENT_ID или __build для --build (опционально)"
        required: false
        default: ""
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  logs:
    runs-on: ubuntu-latest

    # берём чувствительные данные из Secrets
    env:
      RAILWAY_TOKEN:      ${{ secrets.RAILWAY_TOKEN }}
      SERVICE_ID:         ${{ secrets.RAILWAY_SERVICE_ID }}
      ENV_ID:             ${{ secrets.RAILWAY_ENV_ID }}
      RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }} # не обязателен для logs

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node (для Railway CLI)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Validate required secrets
        run: |
          set -e
          for v in RAILWAY_TOKEN SERVICE_ID ENV_ID; do
            if [ -z "${!v}" ]; then
              echo "::error ::Missing required secret/env: $v"
              exit 1
            fi
          done

      - name: Install Railway CLI
        run: |
          npm i -g @railway/cli@latest
          railway --version

      - name: Login with token
        run: |
          # Явный логин, чтобы не смущал Unauthorized в whoami
          railway login --token "${RAILWAY_TOKEN}"
          railway whoami || true

      - name: Fetch logs (JSON)
        id: fetch
        run: |
          set -euo pipefail
          LINES="${{ github.event.inputs.lines || '400' }}"
          SID="${{ github.event.inputs.service_id || env.SERVICE_ID }}"
          EID="${{ github.event.inputs.environment_id || env.ENV_ID }}"
          DEP="${{ github.event.inputs.deployment_id || '' }}"

          DEP_ARG=""
          if [ -n "$DEP" ]; then
            if [ "$DEP" = "__build" ]; then
              DEP_ARG="--build"
            else
              DEP_ARG="--deployment $DEP"
            fi
          fi

          # Никаких --project и никаких `railway use` — они не нужны
          railway logs --service "$SID" --environment "$EID" $DEP_ARG --json > logs.json

          tail -n "$LINES" logs.json | tee tail.txt

          {
            echo "lines=$LINES"
            echo "tail<<'EOF'"
            tail -n "$LINES" logs.json
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Summary
        run: |
          {
            echo "### Railway logs (last ${{ steps.fetch.outputs.lines }} lines)"
            echo
            echo '```json'
            cat tail.txt
            echo '```'
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: railway-logs
          path: |
            logs.json
            tail.txt
          retention-days: 7

      - name: Comment logs to PR
        if: ${{ github.event_name == 'pull_request' }}
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ github.token }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ### Railway logs (last ${{ steps.fetch.outputs.lines }} lines)
            ```json
            ${{ steps.fetch.outputs.tail }}
            ```
