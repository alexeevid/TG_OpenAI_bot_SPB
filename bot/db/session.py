import logging
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from bot.settings import settings

logger = logging.getLogger(__name__)

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç postgres:// –Ω–∞ postgresql://
DB_URL = settings.database_url
if DB_URL.startswith("postgres://"):
    DB_URL = DB_URL.replace("postgres://", "postgresql://", 1)

# –ú–∞—Å–∫–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å –≤ –ª–æ–≥–∞—Ö
safe_url = DB_URL.replace(settings.database_url.split('@')[0], "postgresql://***:***")

try:
    engine = create_engine(DB_URL, echo=False, pool_pre_ping=True)
    logger.info(f"üì¶ Database engine created for {safe_url}")
except Exception as e:
    logger.exception(f"‚ùå Failed to create engine for {safe_url}")
    raise

SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)

def init_db(Base):
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü –ë–î"""
    from . import models
    try:
        Base.metadata.create_all(bind=engine)
        logger.info("‚úÖ Database tables created successfully")
    except Exception as e:
        logger.exception("‚ùå Failed to create database tables")
        raise
