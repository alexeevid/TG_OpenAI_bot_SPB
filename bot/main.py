import logging
from telegram.ext import ApplicationBuilder, MessageHandler, filters

from bot.config import load_settings
from bot.telegram_bot import ChatGPTTelegramBot
from bot.openai_helper import OpenAIHelper
from bot.db.session import init_db
from bot.db.models import Base

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def build_application():
    settings = load_settings()
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ö–µ–º—ã –ë–î (—Å–æ–∑–¥–∞—Å—Ç —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ)
    init_db(Base)

    app = ApplicationBuilder().token(settings.telegram_bot_token).build()

    # OpenAI + –ë–æ—Ç
    openai = OpenAIHelper(api_key=settings.openai_api_key, default_model=settings.openai_model)
    bot = ChatGPTTelegramBot(openai=openai, settings=settings)

    # –ï—Å–ª–∏ —É –±–æ—Ç–∞ –µ—Å—Ç—å install(app) ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ—ë
    try:
        bot.install(app)  # –≤–Ω—É—Ç—Ä–∏ –¥–æ–ª–∂–Ω—ã —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤—Å–µ handlers
    except AttributeError:
        # –§–æ–ª–±—ç–∫: —Ö–æ—Ç—è –±—ã –±–∞–∑–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–∞
        app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, bot.on_text))

    # (–ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ) –ü—Ä–∏–º–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–º–∞–Ω–¥ —á–µ—Ä–µ–∑ post_init ‚Äî —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –º–µ–Ω—é —Å—Ä–∞–∑—É:
    # async def _post_init(app_):
    #     from telegram import BotCommand
    #     await app_.bot.set_my_commands([
    #         BotCommand("start", "–ó–∞–ø—É—Å–∫ –∏ –º–µ–Ω—é"),
    #         BotCommand("help", "–ü–æ–º–æ—â—å"),
    #         BotCommand("reset", "–°–±—Ä–æ—Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞"),
    #         BotCommand("stats", "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"),
    #         BotCommand("kb", "–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π"),
    #         BotCommand("model", "–í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏"),
    #         BotCommand("dialogs", "–°–ø–∏—Å–æ–∫ –¥–∏–∞–ª–æ–≥–æ–≤ / –≤–æ–∑–≤—Ä–∞—Ç"),
    #     ])
    # app.post_init(_post_init)

    return app

def main():
    app = build_application()
    logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è (run_polling)...")
    # –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ ‚Äî –±–µ–∑ asyncio.run –∏ –±–µ–∑ await
    app.run_polling(allowed_updates=None)

if __name__ == "__main__":
    main()
