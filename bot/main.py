# bot/main.py
from __future__ import annotations

import logging
from telegram.ext import Application

from bot.config import load_settings
from bot.telegram_bot import ChatGPTTelegramBot
from bot.openai_helper import OpenAIHelper

logger = logging.getLogger(__name__)
logging.basicConfig(level=logging.INFO)


def build_application() -> Application:
    settings = load_settings()

    # –í–ê–ñ–ù–û: –ø–µ—Ä–µ–¥–∞—ë–º —Ç–æ–ª—å–∫–æ api_key, —á—Ç–æ–±—ã –Ω–µ –ª–æ–≤–∏—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç —Å–∏–≥–Ω–∞—Ç—É—Ä—ã.
    openai = OpenAIHelper(
        api_key=settings.openai_api_key
        # –ï—Å–ª–∏ –≤–∞—à OpenAIHelper –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –¥—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–∑–∂–µ,
        # –Ω–æ —Å–µ–π—á–∞—Å —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å –≤–∞—à–µ–π –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–µ–π.
    )

    app = Application.builder().token(settings.telegram_bot_token).build()

    bot = ChatGPTTelegramBot(openai=openai, settings=settings)
    bot.install(app)

    return app


def main() -> None:
    logger.info("üîí Advisory-lock –ø–æ–ª—É—á–µ–Ω. –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞.")
    app = build_application()

    logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è (run_polling)...")
    # –í–ê–ñ–ù–û: –±–µ–∑ asyncio.run –∏ –±–µ–∑ await!
    app.run_polling(
        allowed_updates=["message", "edited_message", "callback_query"]
    )


if __name__ == "__main__":
    main()
