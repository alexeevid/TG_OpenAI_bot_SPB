# bot/main.py
from __future__ import annotations

import logging
from telegram.ext import Application

from bot.config import load_settings
from bot.telegram_bot import ChatGPTTelegramBot
from bot.openai_helper import OpenAIHelper


def setup_logging() -> None:
    """
    –ë–∞–∑–æ–≤–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤ + –ø—Ä–∏–≥–ª—É—à–µ–Ω–∏–µ –±–æ–ª—Ç–ª–∏–≤—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫.
    –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —Ñ–∏–ª—å—Ç—Ä—É–µ–º —Å—Ç—Ä–æ–∫–∏ —Å /getUpdates.
    """
    logging.basicConfig(
        level=logging.INFO,
        format="%(asctime)s %(levelname)s:%(name)s:%(message)s",
    )

    # –ø—Ä–∏–≥–ª—É—à–∞–µ–º —à—É–º–Ω—ã–µ –ª–∏–±—ã
    logging.getLogger("httpx").setLevel(logging.WARNING)
    logging.getLogger("httpcore").setLevel(logging.WARNING)
    logging.getLogger("telegram.request").setLevel(logging.WARNING)
    logging.getLogger("yadisk").setLevel(logging.WARNING)

    # –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Å–∫—Ä—ã—Ç—å –¢–û–õ–¨–ö–û —Å—Ç—Ä–æ–∫–∏ —Å getUpdates ‚Äî –æ—Å—Ç–∞–≤—å—Ç–µ —Ñ–∏–ª—å—Ç—Ä;
    # –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –≤–∏–¥–µ—Ç—å –≤—Å–µ HTTP-–∑–∞–ø—Ä–æ—Å—ã, —É–¥–∞–ª–∏—Ç–µ –±–ª–æ–∫ –Ω–∏–∂–µ.
    class _DropGetUpdates(logging.Filter):
        def filter(self, record: logging.LogRecord) -> bool:
            try:
                return "getUpdates" not in record.getMessage()
            except Exception:
                return True

    logging.getLogger("httpx").addFilter(_DropGetUpdates())


# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Å–æ–∑–¥–∞—ë–º logger –î–û –ø–µ—Ä–≤–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
setup_logging()
logger = logging.getLogger(__name__)


def build_application() -> Application:
    settings = load_settings()

    # –°–æ–∑–¥–∞—ë–º OpenAI helper.
    # –í–ê–ñ–ù–û: –ø–µ—Ä–µ–¥–∞—ë–º —Ç–æ–ª—å–∫–æ api_key ‚Äî —Ç–∞–∫ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ —Å –≤–∞—à–µ–π —Ç–µ–∫—É—â–µ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–µ–π OpenAIHelper.
    openai = OpenAIHelper(api_key=settings.openai_api_key)

    # –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ (–Ω—É–∂–µ–Ω –∑–∞—Ä–∞–Ω–µ–µ, —á—Ç–æ–±—ã –ø–µ—Ä–µ–¥–∞—Ç—å setup_commands –≤ post_init)
    bot = ChatGPTTelegramBot(openai=openai, settings=settings)

    # –°—Ç—Ä–æ–∏–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º post_init: –æ–Ω –≤—ã—Å—Ç–∞–≤–∏—Ç –∫–æ–º–∞–Ω–¥—ã –∏ –º–µ–Ω—é
    builder = (
        Application.builder()
        .token(settings.telegram_bot_token)
        .post_init(bot.setup_commands)  # –º–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å –≤ telegram_bot.py (async def setup_commands(app): ...)
    )
    app = builder.build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    bot.install(app)

    return app


def main() -> None:
    logger.info("üîí Advisory-lock –ø–æ–ª—É—á–µ–Ω. –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞.")
    app = build_application()

    logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è (run_polling)...")
    # –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –±–ª–æ–∫–∏—Ä—É—é—â–∏–π –≤—ã–∑–æ–≤ ‚Äî PTB —Å–∞–º —É–ø—Ä–∞–≤–ª—è–µ—Ç event loop.
    app.run_polling(
        allowed_updates=["message", "edited_message", "callback_query"]
    )


if __name__ == "__main__":
    main()
