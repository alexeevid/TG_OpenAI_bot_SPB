# bot/main.py
from __future__ import annotations

import fcntl
import os
import sys
import logging
from telegram.ext import Application

from bot.config import load_settings
from bot.telegram_bot import ChatGPTTelegramBot
from bot.openai_helper import OpenAIHelper

# ----- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ -----
logger = logging.getLogger(__name__)
# –ï–¥–∏–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞: INFO –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
logging.basicConfig(
    level=os.environ.get("LOG_LEVEL", "INFO"),
    format="%(asctime)s %(levelname)s:%(name)s:%(message)s",
)

LOCK_FILE = None  # –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä —Ñ–∞–π–ª–∞ –¥–ª—è file-lock


def _acquire_singleton_lock(token: str) -> None:
    """
    –ü—Ä–æ—Å—Ç–æ–π —Ñ–∞–π–ª–æ–≤—ã–π –∑–∞–º–æ–∫, —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –≤—Ç–æ—Ä–æ–π –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫
    –≤ —Ç–æ–º –∂–µ –æ–∫—Ä—É–∂–µ–Ω–∏–∏/–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ. –î–ª—è Railway —ç—Ç–æ –ø–æ–ª–µ–∑–Ω–æ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –∑–∞–ø—É—Å–∫–µ
    –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å —Ç–µ–º –∂–µ volume.
    """
    global LOCK_FILE
    lock_path = f"/tmp/tg-bot-{token}.lock"
    LOCK_FILE = open(lock_path, "w")
    try:
        fcntl.flock(LOCK_FILE, fcntl.LOCK_EX | fcntl.LOCK_NB)
        LOCK_FILE.write(str(os.getpid()))
        LOCK_FILE.flush()
    except BlockingIOError:
        print(
            "Another bot process is already running (file lock). Exiting.",
            file=sys.stderr,
        )
        sys.exit(1)


def build_application() -> Application:
    settings = load_settings()

    # –§–∞–π–ª–æ–≤—ã–π –∑–∞–º–æ–∫ ‚Äî –¥–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≤—Å–µ–≥–æ –æ—Å—Ç–∞–ª—å–Ω–æ–≥–æ
    _acquire_singleton_lock(settings.telegram_bot_token)

    # –í–∞–∂–Ω–æ: –ø–µ—Ä–µ–¥–∞—ë–º —Ç–æ–ª—å–∫–æ api_key ‚Äî –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–µ—Ç –Ω–µ –±—ã—Ç—å –≤ –≤–∞—à–µ–π –≤–µ—Ä—Å–∏–∏ OpenAIHelper
    openai = OpenAIHelper(
        api_key=settings.openai_api_key
    )

    # –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞ –∑–∞—Ä–∞–Ω–µ–µ ‚Äî —á—Ç–æ–±—ã –ø–µ—Ä–µ–¥–∞—Ç—å post_init –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –º–µ–Ω—é/–∫–æ–º–∞–Ω–¥ –ò –æ—á–∏—Å—Ç–∫–∏ –≤–µ–±—Ö—É–∫–∞
    bot = ChatGPTTelegramBot(openai=openai, settings=settings)

    builder = (
        Application.builder()
        .token(settings.telegram_bot_token)
        .post_init(bot.setup_commands_and_cleanup)  # –ø–æ—Å—Ç-–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: delete_webhook + –∫–æ–º–∞–Ω–¥—ã
    )

    # –ú–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ç–∞–π–º–∞—É—Ç—ã, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∑–∞–≤–∏—Å–∞–Ω–∏–π –ø—Ä–∏ –ø–ª–æ—Ö–æ–π —Å–µ—Ç–∏:
    if hasattr(builder, "get_updates_http_version"):
        # –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: builder.get_updates_http_version("1.1")
        pass

    app = builder.build()

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤
    bot.install(app)

    # Error handler ‚Äî —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ "No error handlers are registered"
    app.add_error_handler(bot.on_error)

    return app


def main() -> None:
    logger.info("üîí Advisory-lock –ø–æ–ª—É—á–µ–Ω. –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞.")
    app = build_application()

    logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è (run_polling)...")
    # drop_pending_updates=True ‚Äî —á—Ç–æ–±—ã –æ—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –≤–∏—Å—è—â–∏–µ –∞–ø–¥–µ–π—Ç—ã –∏ —É–º–µ–Ω—å—à–∏—Ç—å —à–∞–Ω—Å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –ø—Ä–∏ —Ä–µ—Å—Ç–∞—Ä—Ç–∞—Ö
    app.run_polling(
        drop_pending_updates=True,
        allowed_updates=["message", "edited_message", "callback_query"],
    )


if __name__ == "__main__":
    main()
